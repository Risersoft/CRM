@using risersoft.app.mxform.crm
@using risersoft.shared.web.Extensions

@model frmTextMessageModel
@{
    ViewData["Title"] = "frmTextMessage";
    Layout = "~/Views/Shared/_FrameworkLayout.vbhtml";
    var modelJson = Model.SerializeJson();

}

<link href="~/Scripts/jquery-ui/jquery-ui.css" rel="stylesheet" />
<link href="~/Content/font-awesome.css" rel="stylesheet" />
<link href="~/Content/jquery.datetimepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap-datepicker.min.css" rel="stylesheet" />

<script src="~/Content/jQueryUI-datetimepicker.js"></script>
<link href="~/Content/component-chosen.css" rel="stylesheet" type="text/css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.8.6/chosen.jquery.min.js"></script>
<link href="~/Content/Site.css" rel="stylesheet" />

<style type="text/css">
    .ui-datepicker {
        z-index: 99 !important;
    }

    .input-group-addon {
        height: calc(1.5em + 0.75rem + 2px);
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #495057;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        /*border-radius: 0.25rem 0rem 0rem 0.25rem;*/
        border-radius: 0.25rem;
    }


    .panel-heading {
        background-color: #1b7cd0;
        height: 40px;
    }

    .panel-body {
        margin-top: 20px;
    }

    .panel-title a {
        color: #fff !important;
    }

    .panel-heading {
        padding: 0;
        border: 0;
        display: block;
        padding: 7px 15px 7px 0px;
        color: #fff;
        font-size: 14px;
        font-weight: bold;
        text-transform: uppercase;
        letter-spacing: 1px;
        word-spacing: 3px;
        text-decoration: none;
    }

        .panel-heading a:before {
            font-family: 'Glyphicons Halflings';
            content: "\e114";
            float: right;
            transition: all 0.5s;
            margin-right: 10px;
        }

        .panel-heading.active a:before {
            -webkit-transform: rotate(180deg);
            -moz-transform: rotate(180deg);
            transform: rotate(180deg);
        }

    .customdiv {
        width: 100%;
    }

    .form-control {
        margin-bottom: 10px !important;
    }
    /* Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }

    label {
        margin-bottom: 0.1rem;
    }

    li {
        list-style: none;
    }

    select, textarea, input {
        max-width: initial;
    }

    #dialogFilterUser {
        display: none;
    }

    #dialogfilterTeam, #dialogCustomer, #myModel {
        display: none;
    }

    .custom-group-button {
        background-color: rgba(212, 212, 212, 0.38);
        border: 1px solid rgba(111, 105, 105, 0.38);
    }

    #btnAttachmentUpload {
        margin-top: -12px;
        height: 45px;
        background-color: #2787db;
        color: #fff;
        line-height: 1.5;
    }

    #loading {
        display: none;
    }
</style>

<div class="container cbackground">
    <form action="" method="post" name="userform" ng-controller="FormController" enctype="multipart/form-data">
        @Html.AntiForgeryToken()

        <input type="hidden" id="model_json" value='@Html.Raw(modelJson)' />
        <div Class="form-horizontal">
            <div class="container" style="padding-top: 15px;padding-bottom: 15px;">
                <div>
                    <input type="hidden" id="fileStatus" />
                    @*<div class="row">
                            <div class="col-md-1"></div>
                            <div class="col-md-11" style="padding-left:0px;">
                                <h4 style="color:#1c66a7">Text Message</h4>
                            </div>
                        </div>*@
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-6" style="padding-left:0px;">
                            <h4 style="color:#1c66a7">Text Message</h4>
                        </div>
                        <div class="col-md-4">
                            @*<input type="button" value="Track" class="btn-default" ng-click="EmailTrack()" style="float:right;margin-bottom: 16px; color: #fff;background: #50a74f !important;border-color: #0c940b !important" />*@

                            <input type="button" value="Send" class="btn-default" ng-click="sendSMS()" style="float:right;margin-bottom: 16px; color: #fff;background: #50a74f !important;border-color: #0c940b !important;margin-right:10px;" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" style="margin-bottom:20px;">
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-10">
                            <div class="row">
                                <div class="col-md-6"></div>
                                <div class="col-md-3">
                                    <select class="form-control" ng-model="Mess.PIDFieldSelected" ng-options="pi.DataValue for pi in Pid.ValueListItems track by pi.DataValue" disabled> </select>
                                </div>
                                <div class="col-md-3">
                                    <select class="form-control" ng-model="Mess.PIDValueSelected" disabled ng-options="item.IDInfo for item in dsCombo.Parent track by item.IDValue"> </select>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-3">
                                    <label class="control-label labeltext">OutBound SMS</label>
                                    <select class="form-control" ng-model="Mess.OutBoundSMSIDSelected" ng-change="OutboundsmsClick(Mess.OutBoundSMSIDSelected)" ng-options="item.Name for item in dsCombo.FromNum track by item.OutBoundSMSID"></select>
                                </div>
                                <div class="col-md-3">
                                    <label class="control-label labeltext">From Number</label>
                                    <input type="text" class="form-control" ng-model="Mess.FromNumber" disabled />
                                </div>
                                <div class="col-md-6">
                                    <label class="control-label labeltext">To Number</label>
                                    <div class="row">
                                        <input type="text" class="input-group-addon" ng-model="Mess.ToDescription" disabled />
                                        <input type="button" class="input-group-addon" value="Select" ng-click="cusitem()" />
                                    </div>
                                </div>
                            </div>
                            <div class="row">

                                <div class="col-md-12">
                                    <label class="control-label labeltext">Message</label>
                                    <input type="text" class="form-control" ng-model="Mess.Content" />
                                </div>
                            </div>


                            <div class="row">
                                <div class="col-md-10">
                                    <label class="control-label labeltext">Attachments</label>
                                    @Html.Partial("_Attachment")
                                </div>
                            </div>

                        </div>
                    </div>

                </div>
            </div>

            <!--Assignment-->
            <div class="row">
                <div class="customdiv">
                    <div class="panel panel-default" id="accordion2" role="tablist" aria-multiselectable="true">
                        <div class="panel-heading active" role="tab" id="heading2">
                            <div class="panel-title">
                                <a role="button" data-toggle="collapse" data-parent="#accordion2" href="#collapse2" aria-expanded="true" aria-controls="collapse2">
                                    <div class="col-md-12">
                                        <div class="row">
                                            <div class="col-md-1"></div>
                                            <div class="col-md-11" style="padding-left:25px;">Assignment</div>
                                        </div>
                                    </div>
                                </a>
                            </div>
                        </div>
                        <div id="collapse2" class="panel-collapse collapse show" role="tabpanel" aria-labelledby="heading2">
                            <div class="panel-body">
                                <div class="col-md-12">
                                    <div class="row">
                                        <div class="col-md-1"></div>
                                        <div class="col-md-2">
                                            <input type="radio" ng-model="Selectedassig" name="rdoassin" value="User" checked /> User
                                        </div>
                                        <div class="col-md-2">
                                            <input type="radio" ng-model="Selectedassig" name="rdoassin" value="Team" /> Team
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-1"></div>
                                        <div class="col-sm-10" ng-show="Selectedassig=='User'">
                                            <label class="control-label labeltext">User :</label><br />
                                            <select id="multiple" name="textmess_mul" @*ng-change="clearfields(Mess.AssignUserIDSelected,'user')"*@ ng-model="Mess.AssignUserIDSelected" class="form-control form-control-chosen" ng-options="item.UserName for item in dsCombo.User track by item.UserID" data-placeholder="Please select..." multiple></select>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-1"></div>
                                        <div class="col-sm-10" ng-show="Selectedassig=='Team'">
                                            <label class="control-label labeltext">Team :</label><br />
                                            <select id="single" name="textmess_sin" @*ng-change="clearfields(Mess.AssignTeamIDSelected,'team')"*@ ng-model="Mess.AssignTeamIDSelected" class="form-control form-control-chosen" ng-options="item.Name for item in dsCombo.Team track by item.TeamID" data-placeholder="Please select..."></select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row"><hr /></div>
                </div>
            </div>


            <!--Button Div-->
            <div class="row">
                <hr />
            </div>

            <div class="row">
                @Html.Partial("_SavePanel")
            </div>
        </div>

        <div id="dialogCustomer">

        </div>
        <!-- Modal -->
    </form>

</div>


@section botscripts{
    <script type="text/javascript">
        $('.panel-collapse').on('show.bs.collapse', function () {
            $(this).siblings('.panel-heading').addClass('active');
        });

        $('.panel-collapse').on('hide.bs.collapse', function () {
            $(this).siblings('.panel-heading').removeClass('active');
        });

        $(document).ready(function () {

            $('.form-control-chosen').chosen({
                // Chosen options here
                allow_single_deselect: false,
                width: '100%'
            });
            document.cookie = "0";
        });


        rsApp.controller('FormController', function ($scope, $http, usSpinnerService) {

            $scope.model = JSON.parse($("#model_json").val());
            $scope.status = 'loaded';
            $scope.check = true;
            $scope.ToMessageData = [];
            $scope.fileName = [];
            $scope.UploadFiles = [];
            $scope.sendSMSkey = 0;
            var loadmodel = function (result) {
                $scope.model = result;
                $scope.Mess = $scope.model.dsForm.DT[0];
                $scope.ValueLists = $scope.model.ValueLists;
                $scope.Pid = $scope.model.ValueLists.PIDField;
                $scope.dsCombo = $scope.model.dsCombo;
                $scope.visdel = ($scope.frmMode == 2 ? false : true);
                $scope.Team = $scope.model.GridViews.Team.MainGrid.myDS.dt;
                $scope.GenerateDelPayload = function () {
                    var payload = { EntityKey: 'Mess', ID: $scope.model.dsForm.DT[0].MessageID, AcceptWarning: false };
                    return payload;
                };

                $scope.UploadFiles = $scope.Mess.AttachmentJson !== null && $scope.Mess.AttachmentJson !== undefined ? JSON.parse($scope.Mess.AttachmentJson) : [];




                 @Html.RenderLookup("Mess", Model, Model.dsForm.Tables(0))

                $scope.Mess.PIDFieldSelected = $.grep($scope.Pid.ValueListItems, function (item, index) { return item.DataValue == $scope.model.dsForm.DT[0].PIDField })[0];
                $scope.Mess.PIDValueSelected = $.grep($scope.dsCombo.Parent, function (item, index) { return item.IDValue == $scope.model.dsForm.DT[0].PIDValue })[0];

                $scope.OutboundsmsClick = function (val) {

                    $scope.Mess.FromNumber = val.FromNumber;
                }

                //Multiple select Modal Popup
                $scope.cusitem = function () {
                    // debugger;
                    var idval = 0;
                    $scope.Mess.ToNumber = '';
                    $scope.Mess.ToID = '';
                    $scope.Mess.ToDescription = '';

                    $scope.Mess.ToName = '';
                    $scope.IsInitializing = true;
                    $scope.result = '';
                    var payload = { PersIDCSV: idval }; // not required here
                    var url = '/frmTextMessage/ParamsModel' + location.search;
                    payload = JSON.stringify(payload);
                    var token = $('input[name="__RequestVerificationToken"]').val();
                    var payloaddata = { key: "tonumber", Params: payload, __RequestVerificationToken: token };
                    igGridDataPostData(url, payloaddata, "dialogCustomer")

                }


                $scope.gridfxn = function (rowData, allData) {

                    for (var i = 0; i < rowData.length; i++) {

                        $scope.ToMessageData.push($.grep(allData, function (item, index) { return item.ig_pk == rowData[i].id })[0]);
                    }
                    for (var i = 0; i < $scope.ToMessageData.length; i++) {
                        if ($scope.Mess.ToDescription == '') {

                            $scope.Mess.ToDescription = $scope.ToMessageData[i].FullName + "<" + $scope.ToMessageData[i].PrPhone + ">";
                        }
                        else {

                            $scope.Mess.ToDescription = $scope.Mess.ToDescription + "," + $scope.ToMessageData[i].FullName + "<" + $scope.ToMessageData[i].PrPhone + ">";
                        }
                    }
                }


                // Single And Multiple select-------
                if (Array.isArray($scope.model.GridViews.Team.MainGrid.myDS.dt) && $scope.model.GridViews.Team.MainGrid.myDS.dt.length) {
                    $scope.Mess.AssignUserIDSelected = $scope.model.GridViews.Team.MainGrid.myDS.dt;

                }
                else {
                    //Selected Assigend User in Edit Mode
                    $scope.Mess.AssignUserIDSelected = [$scope.Mess.AssignUserIDSelected];
                }
                $scope.Mess.AssignTeamIDSelected = [$scope.Mess.AssignTeamIDSelected];

                //Send Email
                $scope.SendSMSData = function () {

                    var cookie = document.cookie;

                    $scope.SendSMSMode = ($scope.model.frmMode == 2 ? false : true);
                    if ($scope.model.frmMode == 1 && $scope.SendSMSMode) {
                        if (cookie == 1 && $scope.sendSMSkey == 1) {
                            // debugger;
                            var url = '/frmTextMessage/IDOutput' + location.search;
                            var token = $('input[name="__RequestVerificationToken"]').val();
                            var payloaddata = { key: 'message', ID: $scope.model.dsForm.DT[0].TextMessageID, __RequestVerificationToken: token };
                            $.post(url, payloaddata, function (result) {
                                if (result.success) {
                                    alert("SMS Send");
                                    document.cookie = "";
                                    document.cookie = "0";
                                    //  debugger;
                                }
                                else {
                                    alert("Failed");
                                }
                            });
                        }
                    }
                }

                $scope.SendSMSData();

            }

            loadmodel($scope.model)
            $scope.cleanupmodel = function (datamodel) {

            };



            var getUrlParameter = function getUrlParameter(sParam) {
                var sPageURL = window.location.search.substring(1),
                    sURLVariables = sPageURL.split('&'),
                    sParameterName,
                    i;

                for (i = 0; i < sURLVariables.length; i++) {
                    sParameterName = sURLVariables[i].split('=');
                    if (sParameterName[0] === sParam) {
                        return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
                    }
                }
            }
            $scope.addDisable = function () {
                $('#DocType').attr("disabled", true);
                $('#filename').attr("disabled", true);
                $('#btnUpload').attr("disabled", true);
                $('#btnsave').attr("disabled", true);
            }
            $scope.addJsonDisable = function () {
                $('#DocTypeC').attr("disabled", true);
                $('#filenamec').attr("disabled", true);
                $('#btnJsonUpload').attr("disabled", true);
            }

            $scope.sendSMS = function () {
                $scope.sendSMSkey = 1;
                $scope.btnsave()
                document.cookie = "";
                document.cookie = "1";
            }
            $scope.Upload = function () {
                var url = '/frmTextMessage/ParamsOutput' + location.search;
                $scope.UploadToUrl(url)
            }

            $scope.downloadFile = function (filename) {

                var downloadUrl = "frmTextMessage";
                $scope.download(downloadUrl, filename)
            }


            $scope.clearfields = function (key) {



                if (key == 'Team') {

                    $scope.Mess.AssignUserIDSelected = [];
                    $('#multiple').val([]);
                    $('#multiple').trigger('chosen:updated');
                    $scope.model.dsForm.DT[0].AssignTeamID = $scope.Mess.AssignTeamIDSelected.TeamID;

                    $scope.model.GridViews.Team.MainGrid.myDS.dt = [];
                    $scope.model.dsForm.DT[0].AssignUserSetID = null
                    $scope.model.dsForm.DT[0].AssignUserID = null
                }
                if (key == 'User') {
                    $scope.Mess.AssignTeamIDSelected = null;
                    $('#single').val([]);
                    $('#single').trigger('chosen:updated');
                    if ($scope.Mess.AssignUserIDSelected != null && $scope.Mess.AssignUserIDSelected != undefined) {
                        var auLength = $scope.Mess.AssignUserIDSelected.length;
                        if (auLength > 1) {
                            $scope.model.GridViews.Team.MainGrid.myDS.dt = [];
                            for (var i = 0; i < $scope.Mess.AssignUserIDSelected.length; i++) {

                                //$scope.Team[i].UserID = $scope.Mess.AssignUserIDSelected[i].UserID;
                                //$scope.Team[i].UserName = $scope.Mess.AssignUserIDSelected[i].UserName;

                                $scope.model.GridViews.Team.MainGrid.myDS.dt.push({ UserID: $scope.Mess.AssignUserIDSelected[i].UserID, UserName: $scope.Mess.AssignUserIDSelected[i].UserName });

                            }
                            //angular.forEach($scope.Mess.AssignUserIDSelected, function (row) {
                            //    debugger;

                            //    $scope.model.GridViews.Team.MainGrid.myDS.dt.push({ UserID: row.UserID, UserName: row.UserName });

                            //});

                            //$scope.Mess.AssignUserIDSelected = null;
                            $scope.model.dsForm.DT[0].AssignUserID = null;
                            $scope.model.dsForm.DT[0].AssignTeamID = null;
                        }
                        else {
                            // debugger;
                            $scope.model.dsForm.DT[0].AssignUserID = $scope.Mess.AssignUserIDSelected[0].UserID;
                            $scope.model.GridViews.Team.MainGrid.myDS.dt = [];
                            $scope.model.dsForm.DT[0].AssignUserSetID = null
                            $scope.model.dsForm.DT[0].AssignTeamID = null;

                        }

                    }
                }

            }


            $scope.calculatemodel = function () {

                var keyval = $scope.Selectedassig;
                $scope.clearfields(keyval);
                // debugger;


                if ($scope.ToMessageData.length > 0) {

                    for (var i = 0; i < $scope.ToMessageData.length; i++) {
                        // debugger
                        if ($scope.Mess.ToID == '') {
                            //   debugger;
                            $scope.Mess.ToNumber = $scope.ToMessageData[i].PrPhone;
                            $scope.Mess.ToID = $scope.ToMessageData[i].PersonID;
                            // $scope.Mess.ToDescription = Data.FullName + "<" + Data.PrPhone + ">";
                            $scope.Mess.ToName = $scope.ToMessageData[i].FullName;
                        }
                        else {
                            //   debugger;
                            $scope.Mess.ToNumber = $scope.Mess.ToNumber + "," + $scope.ToMessageData[i].PrPhone;
                            $scope.Mess.ToID = $scope.Mess.ToID + "," + $scope.ToMessageData[i].PersonID;
                            // $scope.Mess.ToDescription = $scope.Mess.ToDescription + "," + Data.FullName + "<" + Data.PrPhone + ">";
                            $scope.Mess.ToName = $scope.Mess.ToName + "," + $scope.ToMessageData[i].FullName;
                        }
                    }

                }
                $scope.Mess.AttachmentJson = JSON.stringify($scope.UploadFiles);
            };

            @Html.RenderFile("~/scripts/rsforms.js");
            @Html.RenderFile("~/scripts/attachment.js");
        });
    </script>
}







