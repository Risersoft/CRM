@using risersoft.app.mxform.crm
@using risersoft.shared.web.Extensions
@using Syncfusion.EJ2

@model frmEmailTemplateModel
@{
    ViewData["Title"] = "Email Template";
    Layout = "~/Views/Shared/_FrameworkLayout.vbhtml";
    var modelJson = Model.SerializeJson();
}

<link href="~/Scripts/jquery-ui/jquery-ui.css" rel="stylesheet" />
<link href="~/Content/bootstrap-datepicker.min.css" rel="stylesheet" />
<link href="~/Content/font-awesome.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-datepicker.min.js"></script>
<link href="https://ej2.syncfusion.com/aspnetmvc/Content/styles/bootstrap4.css" rel="stylesheet" />
<script src="https://cdn.syncfusion.com/ej2/dist/ej2.min.js"></script>
<link href="~/Content/component-chosen.css" rel="stylesheet" type="text/css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.8.6/chosen.jquery.min.js"></script>

<script type="text/javascript">
    var defaultRTE;
    function created() {
        defaultRTE = this
    };
</script>

<style type="text/css">
    .input-group-addon {
        height: calc(1.5em + 0.75rem + 2px);
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #495057;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        /*border-radius: 0.25rem 0rem 0rem 0.25rem;*/
        border-radius: 0.25rem;
    }


    .panel-heading {
        background-color: #1b7cd0;
        height: 40px;
    }

    .panel-body {
        margin-top: 20px;
    }

    .panel-title a {
        color: #fff !important;
    }

    .panel-heading {
        padding: 0;
        border: 0;
        display: block;
        padding: 7px 15px 7px 0px;
        color: #fff;
        font-size: 14px;
        font-weight: bold;
        text-transform: uppercase;
        letter-spacing: 1px;
        word-spacing: 3px;
        text-decoration: none;
    }

        .panel-heading a:before {
            font-family: 'Glyphicons Halflings';
            content: "\e114";
            float: right;
            transition: all 0.5s;
            margin-right: 10px;
        }

        .panel-heading.active a:before {
            -webkit-transform: rotate(180deg);
            -moz-transform: rotate(180deg);
            transform: rotate(180deg);
        }



    .customdiv {
        width: 100%;
    }


    .form-control {
        margin-bottom: 10px !important;
    }
    /* Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }

    label {
        margin-bottom: 0.1rem;
    }

    li {
        list-style: none;
    }

    select, textarea, input {
        max-width: initial;
    }

    #dialogFilterUser {
        display: none;
    }

    #dialogfilterTeam, #dialogCustomer {
        display: none;
    }

    .custom-group-button {
        background-color: rgba(212, 212, 212, 0.38);
        border: 1px solid rgba(111, 105, 105, 0.38);
    }

    #btnAttachmentUpload {
        margin-top: -12px;
        height: 45px;
        background-color: #2787db;
        color: #fff;
        line-height: 1.5;
    }
</style>

<div class="container cbackground">
    <form action="" method="post" name="userform" ng-controller="FormController">
        @Html.AntiForgeryToken()

        <input type="hidden" id="model_json" value='@Html.Raw(modelJson)' />
        <div Class="form-horizontal">
            <div class="container" style="padding-top: 15px;padding-bottom: 15px;">
                <input type="hidden" id="fileStatus" />
                <div>
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-11" style="padding-left:0px;">
                            <h4 style="color:#1c66a7">Email Template</h4>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" style="margin-bottom:20px;">
                <div class="col-md-12">
                    <div class="row">
                        <input type="hidden" id="fileStatus" />
                        <div class="col-md-1"></div>
                        <div class="col-md-4">
                            <label class="control-label labeltext">Name <span style="color:red">*</span></label>
                            <input type="text" class="form-control" ng-model="EmailTemplate.Name" name="txtname" required ng-class="{true: 'error'}[submitted() && userform.txtname.$invalid]" />
                        </div>
                        <div class="col-md-2">
                            <label class="control-label labeltext" style="visibility:hidden">ReadOnly</label>
                            <label class="form-control" style="background-color:transparent;padding:0px;border: none;"><input type="checkbox" style="width:20px;height:20px;vertical-align:middle;" class="input-group-addon" ng-model="EmailTemplate.ReadOnly" />&nbsp;ReadOnly</label>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label labeltext" style="visibility:hidden">TextOnly</label>
                            <label class="form-control" style="background-color:transparent;padding:0px;border: none;"><input type="checkbox" style="width:20px;height:20px;vertical-align:middle;" class="input-group-addon" ng-model="EmailTemplate.TextOnly" />&nbsp;TextOnly</label>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label labeltext" style="visibility:hidden">Published</label>
                            <label class="form-control" style="background-color:transparent;padding:0px;border: none;"> <input type="checkbox" style="width:20px;height:20px;vertical-align:middle;" class="input-group-addon" ng-model="EmailTemplate.Published" />&nbsp;Published</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-4">
                            <label class="control-label labeltext">Insert Variable</label>
                            <select class="form-control" ng-model="EmailTemplate.varSelected" ng-options="list.DisplayText for list in Var.ValueListItems track by list.DataValue" ng-change="ChangeType(EmailTemplate.varSelected)"></select>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label labeltext" style="visibility:hidden">InfoSelected</label>
                            <select class="form-control" ng-model="InfoSelected" ng-options="lst.COLUMN_NAME for lst in SubType track by lst.COLUMN_NAME" ng-change="AppendTypeSubType(InfoSelected)"></select>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label labeltext" style="visibility:hidden">Typedata</label>
                            <input type="text" class="form-control" ng-model="typedata" disabled />
                        </div>
                        <div class="col-md-2">
                            @* <label class="control-label labeltext" style="visibility:hidden">Button</label>*@
                            <button type="button" class="btn btn-default" style="margin-top:25px;max-width:540px !important;background-color:rgba(212, 212, 212, 0.38);border:1px solid rgba(111, 105, 105, 0.38);" ng-click="insert()">Insert</button>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-10">
                            <label class="control-label labeltext">Subject</label>
                            <input type="text" class="form-control" ng-model="EmailTemplate.Subject" />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-10">
                            @Html.EJS().RichTextEditor("default").Created("created").Render()
                            @Html.EJS().ScriptManager()
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-10">
                            <label class="control-label labeltext">Attachments</label>
                            @Html.Partial("_Attachment")
                        </div>
                    </div>

                </div>

            </div>


            <!--Assignment-->
            <div class="row">
                <div class="customdiv">
                    <div class="panel panel-default" id="accordion2" role="tablist" aria-multiselectable="true">
                        <div class="panel-heading active" role="tab" id="heading2">
                            <div class="panel-title">
                                <a role="button" data-toggle="collapse" data-parent="#accordion2" href="#collapse2" aria-expanded="true" aria-controls="collapse2">
                                    <div class="col-md-12">
                                        <div class="row">
                                            <div class="col-md-1"></div>
                                            <div class="col-md-11" style="padding-left:25px;">Assignment</div>
                                        </div>
                                    </div>
                                </a>
                            </div>
                        </div>
                        <div id="collapse2" class="panel-collapse collapse show" role="tabpanel" aria-labelledby="heading2">
                            <div class="panel-body">
                                <div class="col-md-12">
                                    <div class="row">
                                        <div class="col-md-1"></div>
                                        <div class="col-md-2">
                                            <input type="radio" ng-model="Selectedassig" name="rdoassin" value="User" checked /> User
                                        </div>
                                        <div class="col-md-2">
                                            <input type="radio" ng-model="Selectedassig" name="rdoassin" value="Team" /> Team
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-1"></div>
                                        <div class="col-sm-10" ng-show="Selectedassig=='User'">
                                            <label class="control-label labeltext">User :</label><br />
                                            <select id="multiple" name="emailTemp_mul" @*ng-change="clearfields(EmailTemplate.AssignUserIDSelected,'user')"*@ ng-model="EmailTemplate.AssignUserIDSelected" class="form-control form-control-chosen" ng-options="item.UserName for item in dsCombo.User track by item.UserID" data-placeholder="Please select..." multiple></select>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-1"></div>
                                        <div class="col-sm-10" ng-show="Selectedassig=='Team'">
                                            <label class="control-label labeltext">Team :</label><br />
                                            <select id="single" name="emailTemp_sin" @*ng-change="clearfields(EmailTemplate.AssignTeamIDSelected,'team')"*@ ng-model="EmailTemplate.AssignTeamIDSelected" class="form-control form-control-chosen" ng-options="item.Name for item in dsCombo.Team track by item.TeamID" data-placeholder="Please select..."></select>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row"><hr /></div>
                </div>
            </div>

            <!--Button Div-->
            <div class="row">
                <hr />
            </div>
            <div class="row">
                @Html.Partial("_SavePanel")
            </div>
        </div>



    </form>

</div>


@section botscripts{
    <script type="text/javascript">
        $('.panel-collapse').on('show.bs.collapse', function () {
            $(this).siblings('.panel-heading').addClass('active');
        });

        $('.panel-collapse').on('hide.bs.collapse', function () {
            $(this).siblings('.panel-heading').removeClass('active');
        });

        $(document).ready(function () {
            setInterval(function () {
                $(".my-datepicker").removeClass("my-datepicker").each(function () {
                    $(this).datepicker({ dateFormat: 'yy-mm-dd' });
                });
            }, 10);

            $('.form-control-chosen').chosen({
                // Chosen options here
                allow_single_deselect: false,
                width: '100%'
            });
        });

        rsApp.controller('FormController', function ($scope, $http) {
            $scope.model = JSON.parse($("#model_json").val());
            $scope.status = 'loaded';
            $scope.Selectedassig = 'User';
            $scope.UploadFiles = [];
            var loadmodel = function (result) {

                $scope.model = result;
                $scope.EmailTemplate = $scope.model.dsForm.DT[0];
                $scope.ValueLists = $scope.model.ValueLists;
                $scope.Var = $scope.model.ValueLists.Var;
                // debugger;
                defaultRTE.value = $scope.EmailTemplate.ContentHtml == null ? "" : $scope.EmailTemplate.ContentHtml;

                $scope.dsCombo = $scope.model.dsCombo;
                $scope.visdel = ($scope.frmMode == 2 ? false : true);

                $scope.GenerateDelPayload = function () {
                    var payload = { EntityKey: 'EmailTemplate', ID: $scope.model.dsForm.DT[0].EmailTemplateID, AcceptWarning: false };
                    return payload;
                };

                //List of Files
                $scope.UploadFiles = $scope.EmailTemplate.AttachmentJson !== "" && $scope.EmailTemplate.AttachmentJson !== undefined ? JSON.parse($scope.EmailTemplate.AttachmentJson) : [];

                @Html.RenderLookup("EmailTemplate", Model, Model.dsForm.Tables[0])

                $scope.ChangeType = function (value) {
                    $scope.SubType = [];
                    if (value) {
                        $.each($scope.dsCombo.Info, function (index, item) {
                            if (item.Table_Name === value.DataValue) {
                                $scope.SubType.push(item);
                            }
                        });
                        //debugger;
                    }
                }
                $scope.ChangeType($scope.EmailTemplate.varSelected);

                $scope.insert = function () {
                    if (defaultRTE.value) {
                        defaultRTE.value = defaultRTE.value + '' + $scope.typedata;
                    }
                    else {
                        defaultRTE.value = $scope.typedata;
                    }
                }

                // Single And Multiple select-------
                if (Array.isArray($scope.model.GridViews.Team.MainGrid.myDS.dt) && $scope.model.GridViews.Team.MainGrid.myDS.dt.length) {
                    $scope.EmailTemplate.AssignUserIDSelected = $scope.model.GridViews.Team.MainGrid.myDS.dt;
                }
                else {
                    //Selected Assigend User in Edit Mode
                    $scope.EmailTemplate.AssignUserIDSelected = [$scope.EmailTemplate.AssignUserIDSelected];
                }

                $scope.EmailTemplate.AssignTeamIDSelected = [$scope.EmailTemplate.AssignTeamIDSelected];
            }

            loadmodel($scope.model)

            var getUrlParameter = function getUrlParameter(sParam) {
                var sPageURL = window.location.search.substring(1),
                    sURLVariables = sPageURL.split('&'),
                    sParameterName,
                    i;

                for (i = 0; i < sURLVariables.length; i++) {
                    sParameterName = sURLVariables[i].split('=');
                    if (sParameterName[0] === sParam) {
                        return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
                    }
                }
            }

            $scope.addDisable = function () {
                $('#DocType').attr("disabled", true);
                $('#filename').attr("disabled", true);
                $('#btnUpload').attr("disabled", true);
                $('#btnsave').attr("disabled", true);
            }
            $scope.addJsonDisable = function () {
                $('#DocTypeC').attr("disabled", true);
                $('#filenamec').attr("disabled", true);
                $('#btnJsonUpload').attr("disabled", true);
            }

            $scope.AppendTypeSubType = function (value) {
                $scope.typedata = '';
                var type = $scope.EmailTemplate.varSelected;
                var sub = value;
                if (sub) {
                    $scope.typedata = '$' + type.DisplayText + '_' + sub.COLUMN_NAME;
                }
            }

            $scope.AppendTypeSubType($scope.InfoSelected);

            $scope.Upload = function () {
                var url = '/frmEmailTemplate/ParamsOutput' + location.search;
                $scope.UploadToUrl(url)
            }

            $scope.downloadFile = function (filename) {
                //  debugger;
                var downloadUrl = "frmEmailTemplate";
                $scope.download(downloadUrl, filename)
            }

            $scope.clearfields = function (key) {
                if (key == 'Team') {

                    $scope.EmailTemplate.AssignUserIDSelected = [];
                    $('#multiple').val([]);
                    $('#multiple').trigger('chosen:updated');
                    $scope.model.dsForm.DT[0].AssignTeamID = $scope.EmailTemplate.AssignTeamIDSelected.TeamID;

                    $scope.model.GridViews.Team.MainGrid.myDS.dt = [];
                    $scope.model.dsForm.DT[0].AssignUserSetID = null
                    $scope.model.dsForm.DT[0].AssignUserID = null
                }
                if (key == 'User') {
                    $scope.EmailTemplate.AssignTeamIDSelected = null;
                    $('#single').val([]);
                    $('#single').trigger('chosen:updated');
                    if ($scope.EmailTemplate.AssignUserIDSelected != null && $scope.EmailTemplate.AssignUserIDSelected != undefined) {
                        var auLength = $scope.EmailTemplate.AssignUserIDSelected.length;
                        if (auLength > 1) {
                            $scope.model.GridViews.Team.MainGrid.myDS.dt = [];
                            for (var i = 0; i < $scope.EmailTemplate.AssignUserIDSelected.length; i++) {

                                $scope.model.GridViews.Team.MainGrid.myDS.dt.push({ UserID: $scope.EmailTemplate.AssignUserIDSelected[i].UserID, UserName: $scope.EmailTemplate.AssignUserIDSelected[i].UserName });

                            }

                            $scope.model.dsForm.DT[0].AssignUserID = null;
                            $scope.model.dsForm.DT[0].AssignTeamID = null;
                        }
                        else {
                            // debugger;
                            $scope.model.dsForm.DT[0].AssignUserID = $scope.EmailTemplate.AssignUserIDSelected[0].UserID;
                            $scope.model.GridViews.Team.MainGrid.myDS.dt = [];
                            $scope.model.dsForm.DT[0].AssignUserSetID = null
                            $scope.model.dsForm.DT[0].AssignTeamID = null;
                        }
                    }
                }
            }

            $scope.cleanupmodel = function (datamodel) { };

            $scope.calculateAll = function () {
                $scope.EmailTemplate.ContentHtml = window.btoa(defaultRTE.getHtml());
                // $scope.EmailTemplate.ContentHtml = base64EncodeUnicode(defaultRTE.getHtml());
                $scope.EmailTemplate.Content = defaultRTE.getText();
            };
            $scope.calculateAll()
            $scope.calculatemodel = function () {
                $scope.calculateAll();
                var keyval = $scope.Selectedassig;
                $scope.clearfields(keyval);
                //Save Attachment
                $scope.EmailTemplate.AttachmentJson = JSON.stringify($scope.UploadFiles);

            };

           @Html.RenderFile("~/scripts/rsforms.js");
           @Html.RenderFile("~/scripts/attachment.js");
        });
    </script>
}






